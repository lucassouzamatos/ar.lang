-module(ar_translate).
-export([translate/1]).

% This module translate tree generated by arlang into erlang source code.
translate([]) -> [];

translate([{apply, {{operator, Line, Operation}, L, R}} | Rest]) ->
  [{op, Line, Operation, unwrap_hand_side(L), unwrap_hand_side(R)}] ++ translate(Rest);

translate([{{variable, Line, _}, {_, _, Name}, R} | Rest]) ->
  [{match, Line, {var, Line, Name}, R}] ++ translate(Rest);

translate([{declaration, Line, Name} | Rest]) -> 
  [{var, Line, Name}] ++ translate(Rest);

translate([{{function, Line, _}, {_, _, Name}, Arguments, Body} | Rest]) ->
  [{match, Line,
            {var, Line, Name},
            {'fun',Line,
                   {clauses,[{clause,Line,
                                     translate(Arguments),
                                     [],
                                     translate(Body)}]}}}] ++ translate(Rest).


unwrap_hand_side({Type, Line, Value}) when Type == declaration -> 
  {var,Line,Value};
unwrap_hand_side({Type, Line, Value}) ->
  {Type, Line, Value}.
  

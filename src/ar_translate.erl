-module(ar_translate).
-export([translate/1]).

% This module translate tree generated by arlang into erlang source code.

% Example: [{{operator,1,'+'},{number,1,2},{number,1,2}}]
translate([{apply, {{Type, Line, Operation}, L, R}} | Rest]) when Type == operator ->
  [{op, Line, Operation, unwrap_hand_side(L), unwrap_hand_side(R)}] ++ Rest;

% Example: [{{variable,1,none},{declaration,1,"A"},{integer,1,1}}]
translate([{{Type, Line, _}, {_, _, Name}, R} | Rest]) when Type == variable ->
  [{match, Line, {var, Line, Name}, R}] ++ Rest.

unwrap_hand_side({Type, Line, Value}) when Type == declaration -> 
  {var,Line,Value};
unwrap_hand_side({Type, Line, Value}) ->
  {Type, Line, Value}.
  
